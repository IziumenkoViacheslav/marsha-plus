/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  UniswapV3SwapExamples,
  UniswapV3SwapExamplesInterface,
} from "../../uniswapV3Example.sol/UniswapV3SwapExamples";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "path",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "swapExactInputMultiHop",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "poolFee",
        type: "uint24",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "swapExactInputSingleHop",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ad1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063938427511461003b578063b57084f71461006b575b600080fd5b610055600480360381019061005091906105f9565b61009b565b604051610062919061066f565b60405180910390f35b610085600480360381019061008091906106ef565b6102e9565b604051610092919061066f565b60405180910390f35b60008473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016100da93929190610772565b6020604051808303816000875af11580156100f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011d91906107e1565b508473ffffffffffffffffffffffffffffffffffffffff1663095ea7b373e592427a0aece92de3edee1f18e0157c05861564846040518363ffffffff1660e01b815260040161016d92919061080e565b6020604051808303816000875af115801561018c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b091906107e1565b5060006040518061010001604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018562ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815250905073e592427a0aece92de3edee1f18e0157c0586156473ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b815260040161029b9190610915565b6020604051808303816000875af11580156102ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102de9190610946565b915050949350505050565b60008273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161032893929190610772565b6020604051808303816000875af1158015610347573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036b91906107e1565b508273ffffffffffffffffffffffffffffffffffffffff1663095ea7b373e592427a0aece92de3edee1f18e0157c05861564846040518363ffffffff1660e01b81526004016103bb92919061080e565b6020604051808303816000875af11580156103da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fe91906107e1565b5060006040518060a0016040528087878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018481526020016000815250905073e592427a0aece92de3edee1f18e0157c0586156473ffffffffffffffffffffffffffffffffffffffff1663c04b8d59826040518263ffffffff1660e01b81526004016104d29190610a79565b6020604051808303816000875af11580156104f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105159190610946565b915050949350505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105558261052a565b9050919050565b6105658161054a565b811461057057600080fd5b50565b6000813590506105828161055c565b92915050565b600062ffffff82169050919050565b6105a081610588565b81146105ab57600080fd5b50565b6000813590506105bd81610597565b92915050565b6000819050919050565b6105d6816105c3565b81146105e157600080fd5b50565b6000813590506105f3816105cd565b92915050565b6000806000806080858703121561061357610612610520565b5b600061062187828801610573565b945050602061063287828801610573565b9350506040610643878288016105ae565b9250506060610654878288016105e4565b91505092959194509250565b610669816105c3565b82525050565b60006020820190506106846000830184610660565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126106af576106ae61068a565b5b8235905067ffffffffffffffff8111156106cc576106cb61068f565b5b6020830191508360018202830111156106e8576106e7610694565b5b9250929050565b6000806000806060858703121561070957610708610520565b5b600085013567ffffffffffffffff81111561072757610726610525565b5b61073387828801610699565b9450945050602061074687828801610573565b9250506040610757878288016105e4565b91505092959194509250565b61076c8161054a565b82525050565b60006060820190506107876000830186610763565b6107946020830185610763565b6107a16040830184610660565b949350505050565b60008115159050919050565b6107be816107a9565b81146107c957600080fd5b50565b6000815190506107db816107b5565b92915050565b6000602082840312156107f7576107f6610520565b5b6000610805848285016107cc565b91505092915050565b60006040820190506108236000830185610763565b6108306020830184610660565b9392505050565b6108408161054a565b82525050565b61084f81610588565b82525050565b61085e816105c3565b82525050565b61086d8161052a565b82525050565b6101008201600082015161088a6000850182610837565b50602082015161089d6020850182610837565b5060408201516108b06040850182610846565b5060608201516108c36060850182610837565b5060808201516108d66080850182610855565b5060a08201516108e960a0850182610855565b5060c08201516108fc60c0850182610855565b5060e082015161090f60e0850182610864565b50505050565b60006101008201905061092b6000830184610873565b92915050565b600081519050610940816105cd565b92915050565b60006020828403121561095c5761095b610520565b5b600061096a84828501610931565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156109ad578082015181840152602081019050610992565b60008484015250505050565b6000601f19601f8301169050919050565b60006109d582610973565b6109df818561097e565b93506109ef81856020860161098f565b6109f8816109b9565b840191505092915050565b600060a0830160008301518482036000860152610a2082826109ca565b9150506020830151610a356020860182610837565b506040830151610a486040860182610855565b506060830151610a5b6060860182610855565b506080830151610a6e6080860182610855565b508091505092915050565b60006020820190508181036000830152610a938184610a03565b90509291505056fea26469706673582212206c58f294714781f0c5bb9a63fe2ac616f06ef1d1ae170bff4c8cc65779bfba0b64736f6c63430008120033";

type UniswapV3SwapExamplesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV3SwapExamplesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV3SwapExamples__factory extends ContractFactory {
  constructor(...args: UniswapV3SwapExamplesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniswapV3SwapExamples> {
    return super.deploy(overrides || {}) as Promise<UniswapV3SwapExamples>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UniswapV3SwapExamples {
    return super.attach(address) as UniswapV3SwapExamples;
  }
  override connect(signer: Signer): UniswapV3SwapExamples__factory {
    return super.connect(signer) as UniswapV3SwapExamples__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3SwapExamplesInterface {
    return new utils.Interface(_abi) as UniswapV3SwapExamplesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3SwapExamples {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UniswapV3SwapExamples;
  }
}
